name: Execute jupyter notebooks

env:
  # URL for the external repository linked with the notebooks in this project.
  # This repository needs to be hosted un Github
  LINKED_REPO: aperezhortal/nb_gallery_template

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  run_notebooks:
    name: Execute jupyter notebooks
    runs-on: "ubuntu-latest"

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install mamba and create environment
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: environment.yml
          environment-name: doc_builder
          extra-specs: python=3.8

      - name: Checkout linked repository
        uses: actions/checkout@v2
        with:
          repository: ${{ env.LINKED_REPO }}
          path: ${{ env.LINKED_REPO }}

      - name: Install package from the linked repository
        working-directory: ${{ env.LINKED_REPO }}
        run: |
          pip install .
          git log HEAD
          git git name-rev --name-only --tags HEAD

      - name: Determine destination branch for the rendered notebooks
        id: nb_dest_branch
        working-directory: ${{ env.LINKED_REPO }}
        run: |
          ########################################
          # Find the branch that trigger the event
          if [[ "${GITHUB_EVENT_NAME}" == "push" ]]; then
            event_branch=$(echo ${GITHUB_REF##*/})
          elif [[ "${GITHUB_EVENT_NAME}" == "pull_request" ]]; then
            event_branch=$(echo $GITHUB_BASE_REF)
          else
            event_branch=unknown
          fi
          echo "::set-output name=event_branch::${event_branch}"

          ####################################################################
          # Check if the Linked repository current commit corresponds to a tag
          LINKED_REPO_TAG=$(git name-rev --name-only --tags HEAD)

          ###################################
          # Determina destination branch name
          if [[ "${LINKED_REPO_TAG}" == "undefined" ]]; then
            # Not a tagged version
            if [[ "${event_branch}" == "dev" ]]; then
              echo "::set-output name=dest_branch::test"
            else
              echo "::set-output name=dest_branch::latest"
            fi
          else
            # Save tagged versions in their own branch
            echo "::set-output name=dest_branch::${LINKED_REPO_TAG}"
          fi

      - name: Execute notebooks
        working-directory: ./notebooks
        run: |
          jupyter nbconvert --to notebook --inplace --execute ./*.ipynb
          jupyter nbconvert --to notebook --inplace --execute ./*/*.ipynb

      - name: Print debug information
        env:
          RENDER_BRANCH: ${{steps.nb_dest_branch.outputs.dest_branch}}
          EVENT_BRANCH: ${{steps.nb_dest_branch.outputs.event_branch}}
        run: |
          echo "EVENT_BRANCH=${EVENT_BRANCH}"
          echo "LINKED_REPO_TAG=${LINKED_REPO_TAG}"
          echo "GITHUB_SHA=${GITHUB_SHA}"
          echo "RENDER_BRANCH=${RENDER_BRANCH}"

      - name: Commit notebooks
        env:
          RENDER_BRANCH: ${{steps.nb_dest_branch.outputs.dest_branch}}
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'

          # Checkout changes in an orphan branch first.
          # We want to update  only the notebooks.
          git checkout --orphan tmp
          git reset
          git add -A notebooks
          git commit -m "Rendering $GITHUB_SHA"

          # Clean rest of the files.
          git clean -d -f -f

          # Merge the orphan branch with the RENDER_BRANCH
          git merge --strategy=ours --allow-unrelated-histories origin/${RENDER_BRANCH} -m "Commit"

          # Add changes to the RENDER_BRANCH.
          git checkout -b ${RENDER_BRANCH} origin/${RENDER_BRANCH}
          git merge --squash tmp
          git commit --allow-empty -m "Rendering $GITHUB_SHA"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{steps.nb_dest_branch.outputs.dest_branch}}
